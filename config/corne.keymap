/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <150>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                        quick-tap-ms = <200>;
                };

                mo_tog: behavior_mo_tog {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        flavor = "hold-preferred";
                        tapping-term-ms = <200>;
                        bindings = <&mo>, <&tog>;
                 };

                 mo_trans: hold_or_transparent {
                        compatible = "zmk, behavior-hold-tap";
                        #binding-cells = <2>;
                        tapping-term-ms = <150>;
                        flavor = "tap-preferred";
                        bindings = <&mo>, <&trans>;
                 };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
//            | L2 | BKSPC | SPC |   | TAB | ENTR | ESC |
                        bindings = <
    &kp Q          &kp W          &kp E            &kp R       &kp T       &kp Y &kp U       &kp I             &kp O           &kp P
    &hm LEFT_GUI A &hm LEFT_ALT S &hm LEFT_SHIFT D &hm LCTRL F &kp G       &kp H &hm RCTRL J &hm RIGHT_SHIFT K &hm RIGHT_ALT L &hm RIGHT_GUI SEMI
    &lt 1 Z        &kp X          &kp C            &kp V       &kp B       &kp N &kp M       &kp COMMA         &kp DOT         &lt 1 FSLH
                  &mo_tog 2 2 &kp BACKSPACE &kp SPACE   &kp TAB &kp ENTER &kp ESC
                        >;
                };
                num_sym_layer {
// -----------------------------------------------------------------------------------------
// | Bright |     |  {  |  }  |     |    |  \  |  7  |  8  |  9  | Vol Up   |
// | Dim    |     |  (  |  )  |  =  |    |  -  |  4  |  5  |  6  | Vol Down |
// |        |     |  [  |  ]  |  `  |    |  0  |  1  |  2  |  3  |          |
//             |     |     |     |    |     |     |     |
                        bindings = <
   &kp C_BRI_UP    &trans   &kp LBRC   &kp RBRC   &trans          &kp NUBS    &kp N7   &kp N8    &kp N9   &kp K_VOL_UP
   &kp C_BRI_DN    &trans   &kp LPAR   &kp RPAR   &kp EQUAL       &kp MINUS   &kp N4   &kp N5    &kp N6   &kp K_VOL_DN
   &trans          &trans   &kp LBKT   &kp RBKT   &kp GRAVE       &kp N0      &kp N1   &kp N2    &kp N3   &trans
                &trans     &trans       &trans        &trans     &trans   &trans
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// |  Pg Up    |      |  UP  |        | BT0 |   | F1  | F2  | F3   | F4  | F5  |
// |  Pg Down  | LEFT | DOWN | RIGHT  | BT1 |   | F6  | F7  | F8   | F9  | F10 |
// |           |      |      | BT_CLR | BT2 |   | F11 | F12 | Back | Fwd |     |
//             |     |     |     |   | Pause |     |     |
                        bindings = <
   &kp PG_UP   &trans     &kp UP     &trans      &bt BT_SEL 0      &kp F1   &kp F2   &kp F3      &kp F4     &kp F5
   &kp PG_DN   &kp LEFT   &kp DOWN   &kp RIGHT   &bt BT_SEL 1      &kp F6   &kp F7   &kp F8      &kp F9     &kp F10
   &trans      &trans     &trans     &bt BT_CLR  &bt BT_SEL 2      &kp F11  &kp F12  &kp K_PREV  &kp K_NEXT &trans
                             &trans  &trans  &trans   &kp K_PP  &trans    &trans
                        >;
                };
        };
};
